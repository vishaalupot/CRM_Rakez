@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>

<head>

    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
       @@import url('https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap');
       @@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100..900&display=swap');
        body {
            height: 100vh;
            margin: 0;
            background: var(--Main-color);
            font-family: 'Poppins', sans-serif;
        }

        .element {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            background: var(--Main-bgcolor);
            padding: 20px;
        }

        .contents {
            border-radius: 8px;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            text-align: center;
            width: max-content;
            max-width: 1200px;
        }

        .heading {
            color: #082948;
            font-size: 42px;
            font-family: 'Jaldi', sans-serif;
            margin: 20px 0;
            font-weight: 600;
        }

        .label {
            color: #082948;
            font-family: 'Poppins', sans-serif;
            font-weight: 400;
            font-size: 15px;
            text-align: left;
            margin-bottom: 10px;
        }

        .box {
            background-color: #10497f29;
            border-radius: 12px;
            border: none;
            width: max-content;
            height: 30px;
            margin-top: 7px;
            margin-bottom: 10px;
        }

        .reg {
            height: 100%;
            padding: 0 20px;
        }

        table {
            width: 600px;
            border-collapse: collapse;
            margin-top: 20px;
            font-family: "Roboto Slab", serif;
            font-optical-sizing: auto;
            font-weight: 500;
            font-style: normal;
            font-size: 18px;
        }


            table td, table th {
                border: solid 2px #67919F;
                padding: 10px;
                align-items: center;
                text-align: center;
            }

            table th {
                background-color: white;
                color: black;
                cursor: pointer;
                font-family: "Roboto Slab", serif;
                font-optical-sizing: auto;
                font-size: 22px;
            }

        .form-group {
            display: flex;
            flex-direction: column;
            margin-bottom: 10px;
        }

        .button-29 {
            font-family: 'Jaldi', sans-serif;
            background-image: linear-gradient(to bottom, #238bc7, #000f25);
            border: none;
            border-radius: 6px;
            box-shadow: rgba(45, 35, 66, .4) 0 2px 4px, rgba(45, 35, 66, .3) 0 7px 13px -3px, rgba(58, 65, 111, .5) 0 -3px 0 inset;
            color: #fff;
            cursor: pointer;
            display: inline-flex;
            height: 35px;
            justify-content: center;
            padding: 0 16px;
            text-align: left;
            transition: box-shadow .15s, transform .15s;
            font-size: 15px;
            margin-top: 10px;
        }

            .button-29:focus {
                box-shadow: #3c4fe0 0 0 0 1.5px inset, rgba(45, 35, 66, .4) 0 2px 4px, rgba(45, 35, 66, .3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;
            }

            .button-29:hover {
                box-shadow: rgba(45, 35, 66, .4) 0 4px 8px, rgba(45, 35, 66, .3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;
                transform: translateY(-2px);
            }

            .button-29:active {
                box-shadow: #3c4fe0 0 3px 7px inset;
                transform: translateY(2px);
            }

        .settings {
            display: flex;
            flex-direction: row;
            font-family: 'Jaldi', sans-serif;
            font-weight: 600;
            font-size: 15px;
            border-radius: 4px;
            padding: 5px;
            color: white;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

            .settings:hover {
                transform: scale(1.05);
            }

        .toggle {
            position: relative;
            width: 60px;
            height: 34px;
        }

            .toggle input[type="checkbox"] {
                display: none;
            }

            .toggle label {
                position: absolute;
                top: 0;
                left: 0;
                width: 60px;
                height: 34px;
                background-color: #ccc;
                border-radius: 17px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                .toggle label::before {
                    content: "";
                    position: absolute;
                    top: 3px;
                    left: 3px;
                    width: 28px;
                    height: 28px;
                    border-radius: 50%;
                    background-color: #fff;
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
                    transition: transform 0.3s ease;
                }

            .toggle input:checked + label {
                background-color: #009d12;
            }

                .toggle input:checked + label::before {
                    transform: translateX(26px);
                }

            .toggle label:hover {
                background-color: #999;
            }

            .toggle input:checked + label:hover {
                background-color: #009d12;
            }

            .toggle input:active + label {
                background-color: #009d12;
            }

            .toggle input:checked:active + label {
                background-color: #009d12;
            }

            .toggle input:focus + label {
                box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.2);
            }

        .bg {
            width: 100%;
            height: 100%;
            /* Add your background pattern here */
            background-color: #ffffff;
            background-image: radial-gradient(rgba(12, 12, 12, 0.171) 2px, transparent 0);
            background-size: 30px 30px;
            background-position: -5px -5px;
        }
    </style>
</head>
<body>


    <div class="bg">

        <div class="element">
            @{
                // Get the list of batch statuses from ViewBag
                List<CRM_Raviz.Models.BatchStatus> batchStatuses = (List<CRM_Raviz.Models.BatchStatus>)ViewBag.batchStatuses;
                int count = batchStatuses != null ? batchStatuses.Count : 0;
            }
            <div class="contents">
                <table>
                    <thead>
                        <tr>
                            <th>BATCHES</th>
                            <th>COUNT</th>
                            <th>STATUS</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int index = count - 1; index >= 0; index--)
                        {
                            var batchStatus = batchStatuses[index];
                            <tr>
                                <td data-value="@batchStatus.Batch" class="status" onclick="showPopup('@batchStatus.Batch')">
                                    @batchStatus.Batch
                                </td>
                                <td>
                                    @(batchStatus.Count)
                                </td>
                                <td style="justify-content: center; display: flex;">
                                    <div class="toggle">
                                        <input id="toggle-switch-@index" type="checkbox" @(batchStatus.Status == "True" ? "checked" : "")>
                                        <label for="toggle-switch-@index" onclick="toggleChanged('@batchStatus.Batch', @index)"></label>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>


   

    @section Scripts {
        <script>
            function toggleChanged(batch, index) {
                let url = '@Url.Action("ChangeStatus")';
                var checkbox = document.getElementById('toggle-switch-' + index);
                let status = "True";

                if (checkbox.checked) {
                    status = "False";
                }
                else if(!(checkbox.checked)){
                    status = "True";
                }


                $.ajax({
                    url: url,
                    type: "POST",
                    data: {
                        batch: batch,
                        status : status,
                    },
                    success: function (response) {
                        if (response.success) {

                        } else {
                            // Optionally handle the error response
                            alert("Failed to change status: " + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle the error
                        alert("An error occurred: " + error);
                    }
                });



            }
        </script>
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>
