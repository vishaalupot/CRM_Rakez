@{
    ViewBag.Title = "Home Page";
}



@model IEnumerable<CRM_Raviz.Models.AgentCasesViewModel>
@{
    var agentsWithCasesCount = ViewBag.AgentsWithCasesCount;
    var agentCallBackCount = ViewBag.AgentCallBackCount as List<CRM_Raviz.Models.AgentCasesViewModel>;

}

@using Microsoft.AspNet.Identity


<style>
    @@import url('https://fonts.googleapis.com/css2?family=Jaldi&display=swap');
    @@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');
    @@import url('https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap');


    .allStats {
        border: 1px solid #818181;
        width: 200px;
        height: 100px;
        margin: 40px auto;
        border-radius: 8px;
        display: flex;
        align-items: center;
        background-color: white;
    }

    .stats1 {
        display: flex;
        flex-direction: row;
    }

    .stats-img {
        height: 35px;
        margin: 12px;
        width: 35px;
         background-image: url(@Url.Content("~/Content/Images/call-back1.png"));
        background-size: cover;
        background-position: center;
        transition: background-image 0.3s ease;
    }

    .stats-img2 {
        height: 35px;
        margin: 12px;
        width: 35px;
         background-image: url(@Url.Content("~/Content/Images/event1.png"));
        background-size: cover;
        background-position: center;
        transition: background-image 0.3s ease;
    }

    .stats-img3 {
        height: 35px;
        margin: 12px;
        width: 35px;
         background-image: url(@Url.Content("~/Content/Images/phone-call.png"));
        background-size: cover;
        background-position: center;
        transition: background-image 0.3s ease;
    }

    .stats-text {
        display: flex;
        flex-direction: column;
    }

    .stat-text1 {
        font-size: 17px;
        font-weight: 600;
        white-space: nowrap;
        font-family: 'Jaldi', sans-serif;
        text-align: left;
        color: gray;
    }

    .stat-text2 {
        font-size: 27px;
        font-weight: 800;
        font-family: 'Jaldi', sans-serif;
        text-align: left;
    }

    .stats-logo {
        height: 65px;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #082948;
        transition-duration: 0.3s;
    }

        .stats-logo:hover {
            background-color: white;
            cursor: pointer;
        }

            .stats-logo:hover .stats-img {
                background-image: url(@Url.Content("~/Content/Images/call-back2.png"));
                animation: flip 0.5s linear 1;
            }

            .stats-logo:hover .stats-img3 {
                background-image: url(@Url.Content("~/Content/Images/phone-call1.png"));
                animation: flip 0.5s linear 1;
            }

    @@keyframes flip {
        from {
            transform: rotateY(0deg);
        }

        to {
            transform: rotateY(360deg);
        }
    }

    .stats-logo2 {
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #082948;
        transition-duration: 0.3s;z
    }

        .stats-logo2:hover {
            background-color: white;
            cursor: pointer;
        }

            .stats-logo2:hover .stats-img2 {
                background-image: url(@Url.Content("~/Content/Images/event2.png"));
                animation: flip 0.5s linear 1;
            }

    @@keyframes flip {
        from {
            transform: rotateY(0deg);
        }

        to {
            transform: rotateY(360deg);
        }
    }

    .popup1 {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .popup1-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        position: relative;
        animation: fadeIn 0.3s ease forwards;
        opacity: 0;
    }

    .popup2 {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .popup2-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        position: relative;
        animation: fadeIn 0.3s ease forwards;
        opacity: 0;
        width: max-content;
        height: 400px;
        width: 1000px;
        overflow: scroll;
    }

  /*  #AgentcasesView {
        width: 400px;
        height: 400px;
        overflow: hidden;
    }*/

    .close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 1.5em;
        cursor: pointer;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }
</style>
<style>

    .footer-style {
        background-color: white; /* Light grey background */
        color: #343a40; /* Dark text color */
        font-weight: bold;
    }

        .footer-style td {
            border-top: 2px solid #dee2e6; /* Top border */
            padding: 10px; /* Padding */
        }

  
    body {
        background-color: #f5f5f5;
    }

    .container {
        width: 100vw;
        padding: 0px;
        display: flex;
    }
    .sidebar {
        width: 20%;
        margin: 20px 0px;
        padding: 20px;
        background-color: #fff;
        height: 100%;
        box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
        border-radius: 8px;
        background-color: #082948;
    }

    .stat-box {
        background-color: white;
        margin-bottom: 20px;
        padding: 15px;
        text-align: center;
        border-radius: 4px;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .main-content {
        width: 80%;
        padding: 20px;
        height: 70vh;
    }

    .charts-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .chart {
        width: 48%;
        background-color: #fff;
        padding: 7px;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        height: 100%;
    }

        .chart#traffic-sources, .chart#top-campaigns-conversion-1, .chart#top-campaigns-conversion-2, .chart#top-pages-conversion {
            width: 32%;
        }

        .chart#traffic-sources {
            flex-grow: 1;
        }


    table {
        width: 100%;
        border-collapse: collapse;
        overflow: hidden;
        background-color: white;
        font-family: 'Jaldi', sans-serif;
    }

    thead {
        background-color: #f2f2f2;
    }

    th, td {
        padding: 12px 15px;
        text-align: center;
    }

    th {
        width: 170px;
        background-color: #4CAF50;
        color: white;
        height: 55px;
        font-size: 20px;
        /*color: #082948 !important;*/
    }
    tr {
        height: max-content;
    }

    tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    tbody tr:hover {
        background-color: #ddd;
    }

    table tr td.rowclick {
        transition-duration: 0.15s;
        cursor: pointer;
    }

        table tr td.rowclick:hover {
            transform: scale(1.1);
            color: green;
        }
</style>
<style>
    .chart-container {
        height: 380px;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        /*        background: linear-gradient(to right,#082948 15%, #00806e 95%);
*/ background: linear-gradient(to right,#082948 15%, #035c5e 95%);
    }

    .chart-container2 {
        width: 500px;
        height: 300px;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        background: linear-gradient(to right,#082948 25%, #035c5e 95%) /*linear-gradient(to right,#035c5e 5%, #00806e 95%)*/;
        margin: 10px 0px;
    }

    .chart-container4 {
        width: 100%;
        height: 380px;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        background: linear-gradient(to right,#082948 15%, #035c5e 95%);
    }

    .chart-container3 {
        height: 100%;
        max-height: 300px;
        display: flex;
        justify-content: center;
        flex-direction: column;
        background: linear-gradient(to right,#035c5e 5%, #00806e 95%); /*linear-gradient(to right,#082948 25%, #035c5e 95%);*/
        margin: 10px 0px;
        overflow: auto;
        padding-top: 30px;
    }

    #myChart {
        width: fit-content !important;
        height: fit-content !important;
    }

    #myChar2t {
        width: 100% !important;
        height: 400px !important;
    }

    h3 {

        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        font-size: 30px;
        text-align: center;
        color: white;
        padding: 10px;
    }

     h5 {

        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        font-size: 15px;
        color: white;
        padding: 10px;
    }

    h4 {
        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        font-size: 30px;
        /*text-align: center;*/
        color: white;
        padding: 10px 10px;
        display: flex;
        /*align-items: center;
        justify-content: center;*/
    }

    .logo {
        background-image: url( @Url.Content("~/Content/Images/renewal.png") );
        background-size: cover;
        background-position: center;
        transition: background-image 0.3s ease;
        height: 35px;
        width: 35px;
        display: inline-block; /* Align the logo within the td */
    }
    .logo2 {
        background-image: url( @Url.Content("~/Content/Images/bounced.png") );
        background-size: cover;
        background-position: center;
        transition: background-image 0.3s ease;
        height: 35px;
        width: 35px;
        display: inline-block; /* Align the logo within the td */
    }
    .logo3 {
        background-image: url( @Url.Content("~/Content/Images/both.png") );
        background-size: cover;
        background-position: center;
        transition: background-image 0.3s ease;
        height: 35px;
        width: 35px;
        display: inline-block; /* Align the logo within the td */
    }

    .round {
        border-radius: 50%;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
        height: 45px;
        width: 45px;
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden;
        border: none;
        background-color: white; /* Ensure no background color */
    }

    table td {
        font-family: 'Jaldi', sans-serif;
        font-weight: 600;
        font-size: 18px;
    }


    
</style>
<style>
    .closebutton {
        position: relative;
        width: 2em;
        height: 2em;
        border: none;
        background: rgba(180, 83, 107, 0.11);
        border-radius: 5px;
        transition: background 0.5s;
    }

    .X {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: 2em;
        height: 1.5px;
        background-color: rgb(0 0 0);
        transform: translateX(-50%) rotate(45deg);
    }

    .Y {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: 2em;
        height: 1.5px;
        background-color: rgb(0 0 0);
        transform: translateX(-50%) rotate(-45deg);
    }

    .close {
        position: absolute;
        display: flex;
        padding: 0.8rem 1.5rem;
        align-items: center;
        justify-content: center;
        transform: translateX(-50%);
        top: -70%;
        left: 50%;
        width: 3em;
        height: 1.7em;
        font-size: 12px;
        background-color: rgb(19, 22, 24);
        color: rgb(187, 229, 236);
        border: none;
        border-radius: 3px;
        pointer-events: none;
        opacity: 0;
    }

    .closebutton:hover {
        background-color: rgb(211, 21, 21);

        
    }

        .closebutton:hover .Y {
            background-color: white;
        }
        .closebutton:hover .X {
            background-color: white;
        }

        .closebutton:active {
            background-color: rgb(130, 0, 0);
        }

    .closebutton:hover > .close {
        animation: close 0.2s forwards 0.25s;
    }

    @@keyframes close {
        100% {
            opacity: 1;
        }
    }
</style>
<style>
    #overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5); /* Semi-transparent black background */
    }

    .img {
        position: absolute;
        top: 28%;
        left: 42%;
        z-index: 100;
        background-color: white;
        padding: 7px;
        border-radius: 120px;
        cursor: pointer;
    }

    #overlay-content {
        background-color: white;
        width: 350px;
        height: 390px;
        border-radius: 12px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: white;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        z-index: 10;
        /* Add additional styling for the overlay content */
    }

    .blue-half {
        display: flex;
        width: 600px;
        height: 225px;
        background-color: #113545;
        border-bottom-left-radius: 12px;
        border-bottom-right-radius: 12px;
        flex-direction: column;
        justify-content: flex-end;
    }

    .desc {
        padding: 10px 0px;
    }

    .headname {
        font-size: 2.5rem;
        font-family: 'Poppins', sans-serif;
    }

    .headrole {
        color: #9D9D9D;
        font-size: 14px;
        font-family: 'Jaldi', sans-serif;
    }

    .homebtn {
        background-color: #D9D9D9;
        border-radius: 8px;
        width: 90px;
        height: 32px;
        color: black;
        font-family: 'Jaldi', sans-serif;
        font-size: 14px;
        border: none;
        font-weight: 500;
    }

        .homebtn:focus {
            color: white;
            background-color: #113545;
            border: 1px solid white;
        }

    .dp1 {
        margin-top: 20px;
        width: 150px;
        height: 150px;
        border-radius: 75px;
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
        cursor: pointer;
    }

    .welcomeName {
        font-size: 23px;
        text-decoration: none;
        color: inherit;
        color: white;
        font-weight: 400;
        padding-left: 12px;
        padding-right: 6px;
        display: flex;
        justify-content: center;
        align-items: center;
        padding-top: 5px;
        font-family: 'Poppins', sans-serif;
    }

    .welcome {
        color: #082948;
        font-size: 40px;
        font-weight: 700;
        font-family: 'Poppins', sans-serif;
    }

    .focus {
        color: #082948;
        font-size: 18px;
        /*font-family: "Merriweather", serif;*/
        font-family: 'Jaldi', sans-serif;
        /*font-family: 'Poppins', sans-serif;*/
        font-weight: 700;
        font-style: normal;
        display: flex;
        align-items: center;
    }

    .drop1 {
        border-radius: 8px;
        /*font-family: "Merriweather", serif;*/
        font-family: 'Jaldi', sans-serif;
        font-size: 18px;
        color: #082948;
        font-weight: 700;
       
    }

    .dropdown1 {
        background-color: #f5f5f5;
        border: none;
        color: #082948;
        font-weight: 700;
        cursor: pointer;
        font-size: 18px;
        outline: none;
        border-radius: 8px;
        transition: all 0.3s ease;
        font-family: 'Jaldi', sans-serif;
        /*font-family: "Merriweather", serif;*/
    }

        .dropdown1:hover {
            border-color: none;
            color: #082948;
            cursor: pointer;
            border-radius: 8px;
        }

        .dropdown1:focus {
            box-shadow: none;
            cursor: pointer;
        }


    

</style>
<style>
    .beautiful-table {
        width: 100%;
        border-collapse: collapse;
        font-family: 'Jaldi', sans-serif;
    }

        .beautiful-table th, .beautiful-table td {
           /* border: 1px solid #ddd;*/
            padding: 8px;
            text-align: left;
            font-family: 'Jaldi', sans-serif;
            font-size: 20px;
        }

        .beautiful-table th {
            background-color: #80808000;
            color: white;
            height: 45px;
        }


        .beautiful-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .beautiful-table tr:hover {
            background-color: #ddd;
        }

        .beautiful-table th, .beautiful-table td {
            white-space: nowrap;
        }

    .cover {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 1000;
        display: none;
    }

    .loader {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 80px;
  height: 80px;
  position: relative;
}

.loader:before {
  content: "";
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  border-radius: 50%;
}

.loader-inner {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.loader-block {
  display: inline-block;
  width: 10px;
  height: 10px;
  margin: 2px;
  background-color: #fff;
  box-shadow: 0 0 20px #fff;
  animation: loader_562 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
}

.loader-block:nth-child(1) {
  animation-delay: 0.1s;
}

.loader-block:nth-child(2) {
  animation-delay: 0.2s;
}

.loader-block:nth-child(3) {
  animation-delay: 0.3s;
}

.loader-block:nth-child(4) {
  animation-delay: 0.4s;
}

.loader-block:nth-child(5) {
  animation-delay: 0.5s;
}

.loader-block:nth-child(6) {
  animation-delay: 0.6s;
}

.loader-block:nth-child(7) {
  animation-delay: 0.7s;
}

.loader-block:nth-child(8) {
  animation-delay: 0.8s;
}

@@keyframes loader_562 {
  0% {
    transform: scale(1);
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
  }

  20% {
    transform: scale(1, 2.5);
    box-shadow: 0 0 50px rgba(255, 255, 255, 0.7);
  }

  40% {
    transform: scale(1);
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
  }
}


    /* Popup backdrop - hidden by default */
    .popupBackdrop {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    /* Popup box */
    .popupBox {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 300px;
        text-align: center;
    }

    /* Close button */
    .popupClose {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .popupClose:hover,
        .popupClose:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    .status{
        cursor: pointer;
    }

    /* Buttons */
   


</style>

<style>
    table.custom-table {
        width: 100%;
        border-collapse: collapse;
        font-family: Arial, sans-serif;
    }

        table.custom-table thead tr {
            background-color: #4CAF50;
            color: white;
        }

        table.custom-table thead th {
            padding: 10px;
            border: 1px solid #ddd;
        }

        table.custom-table tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        table.custom-table tbody tr:hover {
            background-color: #ddd;
        }

        table.custom-table tbody th,
        table.custom-table tbody td {
            text-align: center;
            padding: 12px;
            border: 1px solid #ddd;
        }

            table.custom-table tbody th.status {
                background-color: #f9f9f9;
                cursor: pointer;
            }

            table.custom-table tbody td.rowclick {
                cursor: pointer;
                font-size: 20px;
            }
</style>

<style>
    /* Custom CSS for unique table */
    #uniqueTable {
        width: 100%;
        border-collapse: collapse;
        font-family: 'Jaldi', sans-serif;
    }

        #uniqueTable th, #uniqueTable td {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #uniqueTable th {
            background-color: WHITE;
            color: #082948;
            text-align: center;
            font-size: 20px;
            white-space: nowrap;
        }

        #uniqueTable tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #uniqueTable tbody tr:hover {
            background-color: #ddd;
        }

        #uniqueTable .clickable {
            cursor: pointer;
        }

    #uniqueTable {
        width: 100%;
        border-collapse: collapse;
    }

        #uniqueTable thead, #uniqueTable tfoot {
            background-color: #f9f9f9;
        }

        #uniqueTable tfoot {
            position: sticky;
            bottom: 0;
            z-index: 1;
        }

</style>
<html lang="en">
<head>
    <title>Dashboard</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let currentBatch = '';
      function showPopup(Batch) {
    document.getElementById("popupContainer").style.display = "block";

    currentBatch = Batch;
    let url = '@Url.Action("ChangeStatus")';

    const popupContainer = document.querySelector('#popupContainer');
    const newPopupContainer = popupContainer.cloneNode(true);
    popupContainer.parentNode.replaceChild(newPopupContainer, popupContainer);

    newPopupContainer.addEventListener('click', function (event) {
        if (event.target.classList.contains('changeStatus')) {
            $.ajax({
                url: url,
                type: "POST",
                data: {
                    batch: currentBatch,
                },
                success: function (response) {
                    if (response.success) {
                        location.reload(); // Reload the page on success
                    } else {
                        // Optionally handle the error response
                        alert("Failed to change status: " + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    // Handle the error
                    alert("An error occurred: " + error);
                }
            });
        }
    });

}






        function closePopup() {
            document.getElementById("popupContainer").style.display = "none";
        }

        @*function changeStatus(status) {

                let url = '@Url.Action("ChangeStatus")';
                let batch = $(this).data("value");

                alert(batch)

                //$.ajax({
                //    url: url,
                //    type: "Post",
                //    data: {
                //        query: agentCasesValue
                //    },
                //    success: function (dataview) {
                //        $('#AgentcasesView').html(dataview);
                //      //  console.log(dataview);
                //      /*  $("#AgentcasesView").load = dataview;*/
                //    }
                //})

            closePopup();
        }*@
    </script>

    <script>

        document.addEventListener('DOMContentLoaded', () => {
            const popup1 = document.getElementById('popup1');
            const popup2 = document.getElementById('popup2');
            const popup3 = document.getElementById('popup3');
            const popup5 = document.getElementById('popup5');
            const closeBtn = document.querySelector('.close-btn');
            /*const closeBtn1 = document.querySelector('.closebutton');*/
            const statsLogo = document.querySelector('.stats-logo2');
            const callback = document.querySelector('.callback');
            const ring = document.querySelector('.ring');


            const closeButtons = document.querySelectorAll('.closebutton');
            const popups = [popup1, popup2, popup3, popup4, popup5, popup6];



            statsLogo.addEventListener('click', () => {
                popup1.style.display = 'flex';
                popup1.style.flexDirection = 'column';
            });

            callback.addEventListener('click', () => {
                popup3.style.display = 'flex';
            });

            ring.addEventListener('click', () => {
                popup6.style.display = 'flex';
            });



            const AgentCases = document.getElementsByClassName('AgentCases');

            for (let i = 0; i < AgentCases.length; i++) {
                AgentCases[i].addEventListener('click', () => {
                    popup1.style.display = 'none';
                    popup2.style.display = 'flex';
                });
            }

            const CallbackCases = document.getElementsByClassName('CallbackCases');

            for (let i = 0; i < CallbackCases.length; i++) {
                CallbackCases[i].addEventListener('click', () => {
                    popup3.style.display = 'none';
                    popup4.style.display = 'flex';
                });
            }

            const Ringing = document.getElementsByClassName('ringing');

            for (let i = 0; i < Ringing.length; i++) {
                Ringing[i].addEventListener('click', () => {
                    popup6.style.display = 'none';
                    popup4.style.display = 'flex';
                });
            }




            closeButtons.forEach((closeBtn, index) => {
                closeBtn.addEventListener('click', () => {
                    popups[index].style.display = 'none';
                });
            });



            window.addEventListener('click', (event) => {
                if (event.target == popup1) {
                    popup1.style.display = 'none';
                }

                if (event.target == popup2) {
                    popup2.style.display = 'none';
                }

                if (event.target == popup3) {
                    popup3.style.display = 'none';
                }

                if (event.target == popup4) {
                    popup4.style.display = 'none';
                }
                if (event.target == popup5) {
                    popup5.style.display = 'none';
                }
                if (event.target == popup6) {
                    popup6.style.display = 'none';
                }
            });
        });

        $(document).ready(function () {
            $(".AgentData").click(function () {


                let url = '@Url.Action("_AgentCases")';
                let agentCasesValue = $(this).data("value");
                let sec = $(this).data("sec");
                let state = "event"

                $.ajax({
                    url: url,
                    type: "Post",
                    data: {
                        query: agentCasesValue,
                        section: sec,
                        state: state
                    },
                    success: function (dataview) {
                        $('#AgentcasesView').html(dataview);
                      //  console.log(dataview);
                      /*  $("#AgentcasesView").load = dataview;*/
                    }
                })
            })
        });

         $(document).ready(function () {
             $(".CallbackCases").click(function () {
                let url = '@Url.Action("_AgentCases")';
                let agentCasesValue = $(this).data("value");
                let state = "callback"
                let sec = $(this).data("sec");

                $.ajax({
                    url: url,
                    type: "Post",
                    data: {
                        query: agentCasesValue,
                        section: sec,
                        state: state
                    },
                    success: function (dataview) {
                        $('#CallbackCases').html(dataview);
                    //    console.log(dataview);
                    }
                })
            })
        });

    </script>

    <script>

        let url = '@Url.Action("_AgentCases")';
        let agentCasesValue ;
        let state;
        let sec;
        let button;



        $(document).ready(function () {
                 $(".downloadRep").click(function () {
                     const popup5 = document.getElementById('popup5');
                     popup5.style.display = 'flex';

                      button = "clicked"

                        $.ajax({
                            url: url,
                            type: "Post",
                            data: {
                                query: agentCasesValue,
                                section: sec,
                                state: state,
                                button: button,
                            },
                        })
                 })
        });


        $(document).ready(function () {
            $(".segment1").click(function () {
            url = '@Url.Action("_AgentCases")';
            agentCasesValue = $(this).data("value");
            state = "segment1";
            sec = $(this).data("sec");
            button = "@(ViewBag.Filter)";

            $(".cover").css("display", "flex");


            $.ajax({
                url: url,
                type: "POST",
                data: {
                    query: agentCasesValue,
                    section: sec,
                    state: state,
                    button: button
                },
                success: function (dataview) {
                    $(".cover").css("display", "none");

                    const popup5 = document.getElementById('popup5');
                    popup5.style.display = 'flex';
                    $('#segments1').html(dataview);
                },
                complete: function () {
                    // Close the loading SweetAlert
                    Swal.close();
                }
            });
        });
        });


        $(document).ready(function () {
                     $(".segment2").click(function () {
                         $(".cover").css("display", "flex");
                 url = '@Url.Action("_AgentCases")';
                 agentCasesValue = $(this).data("value");
                 state = "segment2"
                 sec = $(this).data("sec");

                button = "@(ViewBag.Filter)";
                $.ajax({
                    url: url,
                    type: "Post",
                    data: {
                        query: agentCasesValue,
                        section: sec,
                        state: state,
                        button:button
                    },
                    success: function (dataview) {
                        $(".cover").css("display", "none");
                        const popup5 = document.getElementById('popup5');
                        popup5.style.display = 'flex';
                        $('#segments1').html(dataview);
                    }
                })
            })
        });

         $(document).ready(function () {
              $(".Mainsegment").click(function () {
              $(".cover").css("display", "flex");

              url = '@Url.Action("_AgentCases")';
              agentCasesValue = $(this).data("value");
                  state = "segmentCombo"
                  sec = $(this).data("sec");
                  batch = $(this).data("value");
                  query = "@(ViewBag.Filter)";

             $.ajax({
                 url: url,
                 type: "Post",
                 data: {
                     section: sec,
                     state: state,
                     button: batch,
                     query : query
                 },
                 success: function (dataview) {
                     $(".cover").css("display", "none");
                     const popup5 = document.getElementById('popup5');
                     popup5.style.display = 'flex';
                     $('#segments1').html(dataview);
                 }
                 })
            })
         });

        $(document).ready(function () {
            $(".ringing").click(function () {
        var url = '@Url.Action("Ringing")';
        var agent = $(this).data("value");
        $.ajax({
            url: url,
            type: "POST",
            data: {
                Agent: agent
            },
            success: function (data) {
                // For example, you might want to populate a table:
                populateTable(data);
            },
            error: function (xhr, status, error) {
                console.error("An error occurred: " + error);
            }
        });
    });
});

              function populateTable(data) {
    var table = $('#CallbackCases');
    table.empty(); // Clear existing content

    // Create table headers
    var headers = '<tr><th>Index</th><th>Account No</th><th>Customer Name</th><th>Agents</th></tr>';
    table.append(headers);

    // Add rows for each item in the data
    $.each(data, function (index, item) {
        var row = $('<tr>').append(
            $('<td>').text(index + 1), // Adding index number (index + 1 for 1-based index)
            $('<td>').text(item.AccountNo),
            $('<td>').text(item.CustomerName),
            $('<td>').text(item.AgentName)
        );

        // Add click event to the row
        row.click(function () {
            window.location = '@Url.Action("RealEditAllocation", "Home")' + '?id=' + item.itemId + '&AccountNo=' + item.AccountNo;
        });

        // Add hover effects
        row.css('cursor', 'pointer'); // Change cursor to pointer
        row.hover(
            function() {
                $(this).css('background-color', '#f0f0f0'); // Light grey on hover
            },
            function() {
                $(this).css('background-color', ''); // Return to original color on hover out
            }
        );

        table.append(row);
    });
}



    </script>

    <script>
        $(document).ready(function () {
            // Function to show the overlay
            function showOverlay() {
                $("#overlay").fadeIn(200);
            }

            // Function to hide the overlay
            function hideOverlay() {
                $("#overlay").fadeOut(200);
            }

            // Example: Show overlay when a button is clicked
            $(".dp").click(function (e) {
                e.stopPropagation(); // Prevent the click event from reaching the document

                showOverlay();

                // Perform your asynchronous operation here (e.g., AJAX call)
            });

            $("#close").click(function (e) {
                e.stopPropagation(); // Prevent the click event from reaching the document
                hideOverlay();
                // Perform your asynchronous operation here (e.g., AJAX call)
            });

            $(document).keyup(function (e) {
                if (e.key === "Escape") {
                    hideOverlay();
                    hideOverlayfe();
                }
            });

            function hideOverlayfe() {
                $("#overlayFe").fadeOut(200);
            }

        });
    </script>
    <script>

    function handleSegmentClick(label, value, datasetIndex) {

        $(".cover").css("display", "flex");
        let url = '@Url.Action("_AgentCases")';
        let query = label;
        let state = "segment2";
        let sec = "";


        alert(button)

        if (datasetIndex === 0) {
             sec = "all";
        } else if (datasetIndex === 1) {
             sec = "worked";
        }

         $.ajax({
             url: url,
             type: "POST",
             data: {
                 query: query,
                 state: state,
                 section: sec,
             },
             success: function (dataview) {
                 $(".cover").css("display", "none");

                 const popup5 = document.getElementById('popup5');
                 popup5.style.display = 'flex';
                 $('#segments1').html(dataview);
             }
         });
    }

    </script>

    <script>
            $(document).ready(function ()  { 
                document.getElementById('agentDropdown').addEventListener('change', function () {
                    var selectedValue = this.value;
                    let url = '@Url.Action("Index", "Home")';

                  /*  alert(selectedValue)*/

                    $.ajax({
                        url: url,
                        type: "POST",
                        data:{
                            filter: selectedValue
                        },
                        success: function (dataview) {
                            window.location.href = url + '?filter=' + encodeURIComponent(selectedValue);

                        }
                    })

                });
            });
    </script>
</head>
<body>
    <div style="display: flex; flex-direction: column;">

        <div class="cover">
            <div class="loader">
                <div class="loader-inner">
                    <div class="loader-block"></div>
                    <div class="loader-block"></div>
                    <div class="loader-block"></div>
                    <div class="loader-block"></div>
                    <div class="loader-block"></div>
                    <div class="loader-block"></div>
                    <div class="loader-block"></div>
                    <div class="loader-block"></div>
                </div>
            </div>
        </div>


        <div style="padding: 5px 10px 0px 10px; display: flex; flex-direction: row; align-items:center;">
            <img src="@Url.Action("DisplayProfilePic", "Home", new { snr = @User.Identity.GetUserId() })" alt="Profile Picture" class="dp" onerror="this.src='@Url.Content("~/Content/Images/placeholder.png")'" />

            <div style="display: flex; flex-direction: column; padding: 0px 10px;">
                <div style="display: flex; flex-direction: row;">
                    <div class="welcome">WELCOME &nbsp;</div>
                    <div class="welcome">@User.Identity.GetUserName().ToUpper()</div>
                </div>

                <div style="padding: 0px 10px; display: flex; flex-direction: row;">
                    <div class="focus">Focus : </div>
                    @{
                        var agents = ViewBag.allAgents as List<string>;
                    }

                    <div class="drop1">
                        <select class="dropdown1" id="agentDropdown">
                            <option></option>
                            @if (agents != null)
                            {
                                if (!User.IsInRole("Agent"))
                                {
                                    <option value="All" @(ViewBag.Filter == "All" ? "selected" : "")>All</option>
                                }
                                foreach (var agent in agents)
                                {
                                    <option value="@agent" @(ViewBag.Filter == agent ? "selected" : "")>@agent</option>
                                }
                            }
                        </select>
                    </div>
                </div>

            </div>
        </div>

        <div class="container" style="height: 90vh;">
            <div class="sidebar">
                <div class="stat-box">
                    <div class="stats-text">
                        <div class="stat-text2">@ViewBag.recentEvents</div>
                        <div class="stat-text1">Daily events</div>
                    </div>
                    <div class="stats-logo2">
                        <div class="stats-img2"></div>
                    </div>
                </div>

                <div class="stat-box">

                    <div class="stats-text">
                        <div class="stat-text2">@ViewBag.callbackCountThisMonth</div>
                        <div class="stat-text1">Call back</div>

                    </div>
                    <div class="stats-logo callback">
                        <div class="stats-img"></div>
                    </div>

                </div>

                <div class="stat-box">
                    <div class="stats-text">
                        <div class="stat-text2">@ViewBag.RingingNos</div>
                        <div class="stat-text1">Non-Contactable</div>
                    </div>
                    <div class="stats-logo  ring">
                        <div class="stats-img3"> </div>
                    </div>
                </div>

                <div class="stat-box">
                    <div class="stats-text">
                        <div class="stat-text2">0</div>
                        <div class="stat-text1">Demo</div>

                    </div>
                    <div class="stats-logo2">
                        <div class="stats-img2"></div>
                    </div>
                </div>

                <div id="popup1" class="popup1">

                    <div class="popup1-content">

                        <button class="closebutton" style=" display: flex;margin: 0 0 0 auto;">
                            <span class="X"></span>
                            <span class="Y"></span>
                            <div class="close">Close</div>
                        </button>
                        <span class="close-btn">&times;</span>

                        @if (Model.Any())
                        {
                            <table>
                                <thead>
                                    <tr>
                                        <th>Agent</th>
                                        <th>Today's Case</th>
                                        <th>Month's Case</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr class="AgentCases ">
                                            <td>@item.ModifiedAgent</td>
                                            <td style="display: flex; justify-content:center;" class="AgentData rowclick" data-sec="day" data-value="@item.ModifiedAgent">@item.CasesCountToday</td>
                                            <td style="text-align: center;" class="AgentData rowclick" data-sec="month" data-value="@item.ModifiedAgent">@item.CasesCountThisMonth</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="footer-style">
                                    <tr>
                                        <td>Total</td>
                                        <td style="text-align: center;">@ViewBag.recentEvents</td>
                                        <td style="text-align: center;">@ViewBag.CasesCountThisMonth</td>
                                    </tr>
                                </tfoot>
                            </table>
                        }
                        else
                        {
                            <p>No data available.</p>
                        }
                    </div>
                </div>

                <div id="popup2" class="popup2">

                    <div class="popup2-content">
                        <button class="closebutton" style=" display: flex;margin: 0 0 0 auto;">
                            <span class="X"></span>
                            <span class="Y"></span>
                            <div class="close">Close</div>
                        </button>
                        @*<span class="close-btn">&times;</span>*@
                        <div id="AgentcasesView">

                        </div>
                    </div>
                </div>
                <div id="popup3" class="popup1">
                    <div class="popup1-content">
                        <button class="closebutton" style=" display: flex;margin: 0 0 0 auto;">
                            <span class="X"></span>
                            <span class="Y"></span>
                            <div class="close">Close</div>
                        </button>
                        <span class="close-btn">&times;</span>

                        <table>
                            <thead>
                                <tr>
                                    <th>Agent</th>
                                    <th>Today's Call back</th>
                                    <th>Due</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in agentCallBackCount)
                                {
                                    <tr>
                                        <td>@item.Agent</td>
                                        <td style="display: flex; justify-content:center;" class="CallbackCases rowclick" data-value="@item.Agent" data-sec="day">@item.CallBackCountToday</td>
                                        <td style="text-align: center;" class="CallbackCases rowclick" data-value="@item.Agent" data-sec="prev">@item.CallBackCountPrev</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </div>
                </div>

                <div id="popup4" class="popup2">
                    <div class="popup2-content">
                        <button class="closebutton" style=" display: flex;margin: 0 0 0 auto;">
                            <span class="X"></span>
                            <span class="Y"></span>
                            <div class="close">Close</div>
                        </button>
                        <span class="close-btn">&times;</span>
                        <div id="CallbackCases">

                        </div>
                    </div>
                </div>

                <div id="popup5" class="popup2">

                    <div class="popup2-content">
                        <button class="closebutton" style=" display: flex;margin: 0 0 0 auto;">
                            <span class="X"></span>
                            <span class="Y"></span>
                            <div class="close">Close</div>
                        </button>
                        <span class="close-btn">&times;</span>
                        <div id="segments1">

                        </div>
                    </div>
                </div>

                <div id="popup6" class="popup1">
                    <div class="popup1-content">
                        <button class="closebutton" style=" display: flex;margin: 0 0 0 auto;">
                            <span class="X"></span>
                            <span class="Y"></span>
                            <div class="close">Close</div>
                        </button>
                        <span class="close-btn">&times;</span>

                        <table style="text-align: center">
                            <thead>
                                <tr>
                                    <th>Agent</th>
                                    <th>Cases</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var agent in ViewBag.RingingAccounts)
                                {
                                    <tr>
                                        <td>@(agent?.GetType().GetProperty("AgentName")?.GetValue(agent, null) ?? "Unknown")</td>
                                        <td class="rowclick ringing" data-value="@(agent?.GetType().GetProperty("AgentName")?.GetValue(agent, null) ?? "Unknown")">@(agent?.GetType().GetProperty("AccountCount")?.GetValue(agent, null) ?? "Unknown")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>

            <div class="main-content">



                <div style="display: flex; flex-direction: row;">
                </div>
                <div class="chart chart-container4">
                    <div style="width: 100%; height: 100%; overflow-x: auto;">
                        @*<table id="uniqueTable">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Bounced Cheque</th>
                                    <th>Bounced Cheque & Renewal</th>
                                    <th>Renewal</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    <tr>
                                        <th>Total</th>
                                        <td>@(ViewBag.segmentCountsComb[0])</td>
                                        <td>@(ViewBag.segmentCountsComb[1])</td>
                                        <td>@(ViewBag.segmentCountsComb[2])</td>
                                    </tr>
                                }


                                @if (ViewBag.allbatchesComb != null)
                                {
                                    int count = ViewBag.allbatchesComb.Count;
                                    for (int index = count - 1; index >= 0; index--)
                                    {
                                        var batch = ViewBag.allbatchesComb[index];
                                        <tr>
                                            <th class="clickable" data-value="@batch" onclick="showPopup('@batch')">
                                                @batch
                                            </th>
                                            <td style="text-align: center; font-size: 20px;" class="segment2 rowclick" data-sec="worked" data-value="@batch">
                                                @(ViewBag.BCBatches != null && ViewBag.BCBatches.Count > index && ViewBag.BCBatches[index] != null && ViewBag.BCBatches[index] > 0 ? ViewBag.BCBatches[index] : 0)
                                            </td>
                                            <td style="text-align: center; font-size: 20px;" class="segment2 rowclick" data-sec="notworked" data-value="@batch">
                                                @(ViewBag.BBatches != null && ViewBag.BBatches.Count > index && ViewBag.BBatches[index] != null && ViewBag.BBatches[index] >= 0 ? ViewBag.BBatches[index] : 0)
                                            </td>
                                            <td style="text-align: center; font-size: 20px;">
                                                @(ViewBag.RBatches != null && ViewBag.RBatches.Count > index && ViewBag.RBatches[index] != null && ViewBag.RBatches[index] >= 0 ? ViewBag.RBatches[index] : 0)
                                            </td>
                                            <td style="text-align: center; font-size: 20px;">
                                                @(ViewBag.totalBatchesComb != null && ViewBag.totalBatchesComb.Count > index && ViewBag.totalBatchesComb[index] != null && ViewBag.totalBatchesComb[index] >= 0 ? ViewBag.totalBatchesComb[index] : 0)
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>*@



                        <table id="uniqueTable">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Bounced Cheque</th>
                                    <th>Bounced Cheque & Renewal</th>
                                    <th>Renewal</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th>Total</th>
                                    <th>@(ViewBag.segmentCountsComb[0])</th>
                                    <th>@(ViewBag.segmentCountsComb[1])</th>
                                    <th>@(ViewBag.segmentCountsComb[2])</th>
                                    <th>@(ViewBag.totalCases)</th>
                                </tr>
                            @if (ViewBag.allbatchesComb != null)
                            {
                                int count = ViewBag.allbatchesComb.Count;
                                for (int index = count - 1; index >= 0; index--)
                                {
                                    var batch = ViewBag.allbatchesComb[index];
                                    <tr>
                                        <th class="clickable" data-value="@batch" onclick="showPopup('@batch')">
                                            @batch
                                        </th>
                                        <td style="text-align: center; font-size: 20px;" class="Mainsegment rowclick" data-sec="Bounced Cheque" data-value="@batch">
                                            @(ViewBag.BCBatches != null && ViewBag.BCBatches.Count > index && ViewBag.BCBatches[index] != null && ViewBag.BCBatches[index] > 0 ? ViewBag.BCBatches[index] : 0)
                                        </td>
                                        <td style="text-align: center; font-size: 20px;" class="Mainsegment rowclick" data-sec="Bounced Cheque and Renewal" data-value="@batch">
                                            @(ViewBag.BBatches != null && ViewBag.BBatches.Count > index && ViewBag.BBatches[index] != null && ViewBag.BBatches[index] >= 0 ? ViewBag.BBatches[index] : 0)
                                        </td>
                                        <td style="text-align: center; font-size: 20px;" class="Mainsegment rowclick" data-sec="Renewal" data-value="@batch">
                                            @(ViewBag.RBatches != null && ViewBag.RBatches.Count > index && ViewBag.RBatches[index] != null && ViewBag.RBatches[index] >= 0 ? ViewBag.RBatches[index] : 0)
                                        </td>
                                        <td style="text-align: center; font-size: 20px;" >
                                            @(ViewBag.totalBatchesComb != null && ViewBag.totalBatchesComb.Count > index && ViewBag.totalBatchesComb[index] != null && ViewBag.totalBatchesComb[index] >= 0 ? ViewBag.totalBatchesComb[index] : 0)
                                        </td>
                                    </tr>
                                }
                            }
                            </tbody>

                        </table>
                    </div>
                </div>
                @*<div class="charts-row">



                    <div class="chart chart-container">
                        <div style="display: flex; flex-direction: row; justify-content:space-between;">
                            <div>
                                <h3>Segments</h3>
                            </div>

                            <div style="display: flex; flex-direction: row; color: white; justify-content:flex-end; align-items:center;">
                                <h5>Total</h5>
                                <h5>Non Worked</h5>
                            </div>
                        </div>


                        <div>
                            <table>
                                <tbody>


                                    <tr style="height: 79px;">
                                        <td>
                                            <div class="round">
                                                <div class="logo2" />
                                            </div>
                                        </td>
                                        <td class="AgentData">Bounced Cheque</td>
                                        <td style="text-align: center; font-size: 20px;" class="segment1 rowclick" data-sec="all" data-value="Bounced Cheque">@ViewBag.segmentCounts[0]</td>
                                        <td style="text-align: center; font-size: 20px;" class="segment1 rowclick" data-sec="notworked" data-value="Bounced Cheque">@ViewBag.segmentNotWorked[0]</td>
                                    </tr>
                                    <tr style="height: 79px;">
                                        <td>
                                            <div class="round">
                                                <div class="logo3" />
                                            </div>
                                        </td>
                                        <td class="AgentData">Bounced Cheque & Renewal</td>
                                        <td style="text-align: center; font-size: 20px;" class="segment1 rowclick" data-sec="all" data-value="Bounced Cheque and Renewal">@(ViewBag.segmentCounts[1] != null ? ViewBag.segmentCounts[1] : 0)</td>
                                        <td style="text-align: center; font-size: 20px;" class="segment1 rowclick" data-sec="notworked" data-value="Bounced Cheque and Renewal">
                                            @(ViewBag.segmentNotWorked != null && ViewBag.segmentNotWorked.Count > 2 ? ViewBag.segmentNotWorked[1] : 0)
                                        </td>
                                    </tr>
                                    <tr style="height: 79px;">
                                        <td>
                                            <div class="round">
                                                <div class="logo" />
                                            </div>
                                        </td>
                                        <td class="AgentData">Renewal</td>
                                        <td style="text-align: center; font-size: 20px;" class="segment1 rowclick" data-sec="all" data-value="Renewal">@(ViewBag.segmentCounts[2] != null ? ViewBag.segmentCounts[2] : 0)</td>
                                        <td style="text-align: center; font-size: 20px;" class="segment1 rowclick" data-sec="notworked" data-value="Renewal">@(ViewBag.segmentNotWorked[2] != null ? ViewBag.segmentNotWorked[2] : 0)</td>
                                    </tr>


                                </tbody>
                                <tfoot class="footer-style">
                                    <tr>
                                        <td></td>
                                        <td>Total</td>
                                        <td style="text-align: center; font-size: 20px;">@ViewBag.totalCases </td>
                                        <td style="text-align: center; font-size: 20px;">@ViewBag.totalCasesnotworked</td>
                                    </tr>
                                </tfoot>
                            </table>


                        </div>
                    </div>

                    <div class="chart chart-container2">
                        <h4>Batches</h4>
                        <div style="width: 100%; height: 100%; overflow-x: auto;">
                            <table>
                                <thead>
                                    <tr style="white-space: nowrap;">
                                        <th style="background-color: white; color: black;"></th>
                                        <th style="background-color: white; color: black;">Worked</th>
                                        <th style="background-color: white; color: black;">Not Worked</th>
                                        <th style="background-color: white; color: black;">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (ViewBag.allbatches != null)
                                    {
                                        int count = ViewBag.allbatches.Count;
                                        for (int index = count - 1; index >= 0; index--)
                                        {
                                            var batch = ViewBag.allbatches[index];



                                            <tr>
                                                <div id="popupContainer" class="popupBackdrop">
                                                    <div class="popupBox">
                                                        <span class="popupClose" onclick="closePopup()">&times;</span>
                                                        <p>Do you want to change the batch status?</p>
                                                        <button style="padding: 10px; margin: 10px; border: none; cursor: pointer; font-size: 16px;background-color:red; color: white;" class="changeStatus" data-value="@batch">Disable</button>
                                                        <button style="padding: 10px; margin: 10px; border: none; cursor: pointer; font-size: 16px; background-color: green; color: white;" class="changeStatus" data-value="@batch">Enable</button>
                                                    </div>
                                                </div>

                                                <th style="background-color: white; color: black;" data-value="@batch" class="status" onclick="showPopup('@batch')">
                                                    @batch
                                                </th>

                                                <td style="text-align: center; font-size: 20px;" class="segment2 rowclick" data-sec="worked" data-value="@batch">
                                                    @(ViewBag.BatchWorked != null && ViewBag.BatchWorked.Count > index && ViewBag.BatchWorked[index] != null && ViewBag.BatchWorked[index] > 0 ? ViewBag.BatchWorked[index] : 0)
                                                </td>
                                                <td style="text-align: center; font-size: 20px;" class="segment2 rowclick" data-sec="notworked" data-value="@batch">
                                                    @(ViewBag.BatchNotWorked != null && ViewBag.BatchNotWorked.Count > index && ViewBag.BatchNotWorked[index] != null && ViewBag.BatchNotWorked[index] >= 0 ? ViewBag.BatchNotWorked[index] : 0)
                                                </td>
                                                <td style="text-align: center; font-size: 20px;">
                                                    @(ViewBag.TotalBatches != null && ViewBag.TotalBatches.Count > index && ViewBag.TotalBatches[index] != null && ViewBag.TotalBatches[index] >= 0 ? ViewBag.TotalBatches[index] : 0)
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>*@


            <div class="charts-row">
                <div class="chart chart-container2">
                    @*<h4>Batches</h4>*@
                    <div style="width: 100%; height: 100%; overflow-x: auto;">
                        <table style="font-family: 'Jaldi', sans-serif;">
                            <thead>
                                <tr style="white-space: nowrap;">
                                    <th style="background-color: white; color: black;">BATCHES</th>
                                    <th style="background-color: white; color: black;">WORKED</th>
                                    <th style="background-color: white; color: black;">NOT WORKED</th>
                                    @*<th style="background-color: white; color: black;">Total</th>*@
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.allbatches != null)
                                {
                                    int count = ViewBag.allbatches.Count;
                                    for (int index = count - 1; index >= 0; index--)
                                    {
                                        var batch = ViewBag.allbatches[index];



                                        <tr>
                                            <div id="popupContainer" class="popupBackdrop">
                                                <div class="popupBox">
                                                    <span class="popupClose" onclick="closePopup()">&times;</span>
                                                    <p>Do you want to change the batch status?</p>
                                                    <button style="padding: 10px; margin: 10px; border: none; cursor: pointer; font-size: 16px;background-color:red; color: white;" class="changeStatus" data-value="@batch">Disable</button>
                                                    <button style="padding: 10px; margin: 10px; border: none; cursor: pointer; font-size: 16px; background-color: green; color: white;" class="changeStatus" data-value="@batch">Enable</button>
                                                </div>
                                            </div>

                                            <th style="background-color: white; color: black;" data-value="@batch" class="status" onclick="showPopup('@batch')">
                                                @batch
                                            </th>

                                            <td style="text-align: center; font-size: 20px;" class="segment2 rowclick" data-sec="worked" data-value="@batch">
                                                @(ViewBag.BatchWorked != null && ViewBag.BatchWorked.Count > index && ViewBag.BatchWorked[index] != null && ViewBag.BatchWorked[index] > 0 ? ViewBag.BatchWorked[index] : 0)
                                            </td>
                                            <td style="text-align: center; font-size: 20px;" class="segment2 rowclick" data-sec="notworked" data-value="@batch">
                                                @(ViewBag.BatchNotWorked != null && ViewBag.BatchNotWorked.Count > index && ViewBag.BatchNotWorked[index] != null && ViewBag.BatchNotWorked[index] >= 0 ? ViewBag.BatchNotWorked[index] : 0)
                                            </td>
                                            @*<td style="text-align: center; font-size: 20px;">
                                        @(ViewBag.TotalBatches != null && ViewBag.TotalBatches.Count > index && ViewBag.TotalBatches[index] != null && ViewBag.TotalBatches[index] >= 0 ? ViewBag.TotalBatches[index] : 0)
                                    </td>*@
                                        </tr>
                                    }
                                }
                            </tbody>

                        </table>
                    </div>
                </div>
                <div class="chart chart-container3">
                    <div>

                        <table class="beautiful-table">
                            <tbody>
                                <tr style="height: 45px; background: linear-gradient(to right,#035c5e 5%, #00806e 95%)">
                                    <th style="text-align:center;">Agents</th>
                                    <th style="text-align:center;">Cases</th>
                                </tr>
                              

                                @if (ViewBag.allAgents != null && ViewBag.totalCasesList != null)
                                {
                                    int index = 0;
                                    foreach (var agent in ViewBag.Agents)
                                    {
                                        <tr>
                                            <td  style="text-align:center;" >
                                                @agent
                                            </td>
                                            <td class="segment2 rowclick" style="text-align:center;" data-value="@agent">
                                                @(ViewBag.totalCasesList.Count > index ? (ViewBag.totalCasesList[index] != null && ViewBag.totalCasesList[index] > 0 ? ViewBag.totalCasesList[index] : 0) : 0)
                                            </td>
                                        </tr>
                                        index++;
                                    }
                                }
                            </tbody>
                        </table>


                    </div>


                </div>



            </div>


            </div>


        </div>

        <div id="overlay">
            @Html.Partial("_ProfilePic", "Home")
        </div>
    </div>
</body>
</html>
