@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <style>
        .dp{
            width: 30px;
            height: 30px;
            border-radius: 50px;
        }

        li{
            padding: 0px 0px 0px 7px;
        }

    </style>

    <style>
        .Btn {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            width: 30px;
            height: 30px;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            transition-duration: 0.3s;
            box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.199);
           /* background-color: RGB(29, 185, 84);*/
           margin: 0px 5px;
        }

        /* plus sign */
        .sign {
            width: 100%;
            transition-duration: 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .sign svg {
                width: 18px;
            }

                .sign svg path {
                    fill: black;
                }
        /* text */
        .text {
            position: absolute;
            right: 0%;
            width: 0%;
            opacity: 0;
            color: black;
            font-size: 0.8em;
            font-weight: 600;
            transition-duration: 0.3s;
        }
        /* hover effect on button width */
        .Btn:hover {
            width: 125px;
            border-radius: 40px;
            transition-duration: 0.3s;
        }

            .Btn:hover .sign {
                width: 30%;
                transition-duration: 0.3s;
                padding-left: 20px;
            }
            /* hover effect button's text */
            .Btn:hover .text {
                opacity: 1;
                width: 70%;
                transition-duration: 0.3s;
                padding-right: 10px;
            }
        /* button click effect*/
        .Btn:active {
            transform: translate(2px, 2px);
        }

    </style>

    <style>
        /* The design is inspired from the mockapi.io */

        .popup {
            --burger-line-width: 1.125em;
            --burger-line-height: 0.125em;
            --burger-offset: 0.625em;
            --burger-bg: rgb(255, 247, 247);
            --burger-color: #333;
            --burger-line-border-radius: 0.1875em;
            --burger-diameter: 30px;
            --burger-btn-border-radius: calc(var(--burger-diameter) / 2);
            --burger-line-transition: .3s;
            --burger-transition: all .1s ease-in-out;
            --burger-hover-scale: 1.1;
            --burger-active-scale: .95;
            --burger-enable-outline-color: var(--burger-bg);
            --burger-enable-outline-width: 0.125em;
            --burger-enable-outline-offset: var(--burger-enable-outline-width);
            /* nav */
            --nav-padding-x: 0.25em;
            --nav-padding-y: 0.625em;
            --nav-border-radius: 0.375em;
            --nav-border-color: #ccc;
            --nav-border-width: 0.0625em;
            --nav-shadow-color: rgba(0, 0, 0, .2);
            --nav-shadow-width: 0 1px 5px;
            --nav-bg: #eee;
            --nav-font-family: Menlo, Roboto Mono, monospace;
            --nav-default-scale: .8;
            --nav-active-scale: 1;
            --nav-position-left: -50px;
            --nav-position-right: unset;
            /* if you want to change sides just switch one property */
            /* from properties to "unset" and the other to 0 */
            /* title */
            --nav-title-size: 0.625em;
            --nav-title-color: #777;
            --nav-title-padding-x: 1rem;
            --nav-title-padding-y: 0.25em;
            /* nav button */
            --nav-button-padding-x: 1rem;
            --nav-button-padding-y: 0.375em;
            --nav-button-border-radius: 0.375em;
            --nav-button-font-size: 12px;
            --nav-button-hover-bg: #6495ed;
            --nav-button-hover-text-color: #fff;
            --nav-button-distance: 0.875em;
            /* underline */
            --underline-border-width: 0.0625em;
            --underline-border-color: #ccc;
            --underline-margin-y: 0.3125em;
        }

        /* popup settings 👆 */

        .popup {
            display: inline-block;
            text-rendering: optimizeLegibility;
            position: relative;
        }

            .popup input {
                display: none;
            }

        .burger {
            display: flex;
            position: relative;
            align-items: center;
            justify-content: center;
            background: var(--burger-bg);
            width: var(--burger-diameter);
            height: var(--burger-diameter);
            border-radius: var(--burger-btn-border-radius);
            border: none;
            cursor: pointer;
            overflow: hidden;
            transition: var(--burger-transition);
            outline: var(--burger-enable-outline-width) solid transparent;
            outline-offset: 0;
        }

            .burger span {
                height: var(--burger-line-height);
                width: var(--burger-line-width);
                background: var(--burger-color);
                border-radius: var(--burger-line-border-radius);
                position: absolute;
                transition: var(--burger-line-transition);
            }

                .burger span:nth-child(1) {
                    top: var(--burger-offset);
                }

                .burger span:nth-child(2) {
                    bottom: var(--burger-offset);
                }

                .burger span:nth-child(3) {
                    top: 50%;
                    transform: translateY(-50%);
                }

        .popup-window {
            transform: scale(var(--nav-default-scale));
            visibility: hidden;
            opacity: 0;
            position: absolute;
            padding: var(--nav-padding-y) var(--nav-padding-x);
            background: var(--nav-bg);
            font-family: var(--nav-font-family);
            color: var(--nav-text-color);
            border-radius: var(--nav-border-radius);
            box-shadow: var(--nav-shadow-width) var(--nav-shadow-color);
            border: var(--nav-border-width) solid var(--nav-border-color);
            top: calc(var(--burger-diameter) + var(--burger-enable-outline-width) + var(--burger-enable-outline-offset));
            left: var(--nav-position-left);
            right: var(--nav-position-right);
            transition: var(--burger-transition);


        }

            .popup-window legend {
                padding: var(--nav-title-padding-y) var(--nav-title-padding-x);
                margin: 0;
                color: var(--nav-title-color);
                font-size: var(--nav-title-size);
                text-transform: uppercase;
            }

            .popup-window ul {
                margin: 0;
                padding: 0;
                list-style-type: none;
            }

                .popup-window ul button {
                    outline: none;
                    width: 100%;
                    border: none;
                    background: none;
                    display: flex;
                    align-items: center;
                    color: var(--burger-color);
                    font-size: var(--nav-button-font-size);
                    padding: var(--nav-button-padding-y) var(--nav-button-padding-x);
                    white-space: nowrap;
                    border-radius: var(--nav-button-border-radius);
                    cursor: pointer;
                    column-gap: var(--nav-button-distance);
                }

                .popup-window ul li:nth-child(1) svg,
                .popup-window ul li:nth-child(2) svg {
                    color: cornflowerblue;
                }

                .popup-window ul li:nth-child(4) svg,
                .popup-window ul li:nth-child(5) svg {
                    color: rgb(153, 153, 153);
                }

                .popup-window ul li:nth-child(7) svg {
                    color: red;
                }

            .popup-window hr {
                margin: var(--underline-margin-y) 0;
                border: none;
                border-bottom: var(--underline-border-width) solid var(--underline-border-color);
            }

            /* actions */

            .popup-window ul button:hover,
            .popup-window ul button:focus-visible,
            .popup-window ul button:hover svg,
            .popup-window ul button:focus-visible svg {
                color: var(--nav-button-hover-text-color);
                background: var(--nav-button-hover-bg);
            }

        .burger:hover {
            transform: scale(var(--burger-hover-scale));
        }

        .burger:active {
            transform: scale(var(--burger-active-scale));
        }

        .burger:focus:not(:hover) {
            outline-color: var(--burger-enable-outline-color);
            outline-offset: var(--burger-enable-outline-offset);
        }

        .popup input:checked + .burger span:nth-child(1) {
            top: 50%;
            transform: translateY(-50%) rotate(45deg);
        }

        .popup input:checked + .burger span:nth-child(2) {
            bottom: 50%;
            transform: translateY(50%) rotate(-45deg);
        }

        .popup input:checked + .burger span:nth-child(3) {
            transform: translateX(calc(var(--burger-diameter) * -1 - var(--burger-line-width)));
        }

        .popup input:checked ~ nav {
            transform: scale(var(--nav-active-scale));
            visibility: visible;
            opacity: 1;
        }
    </style>
    
    
    
    <ul class="navbar-nav navbar-right ">

        <li>
            <button class="Btn">
                <div class="sign">
                    <svg viewBox="0 0 512 512">
                        <path d="M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z"></path>
                    </svg>
                </div>

                <div class="text">Logout</div>
            </button>

        </li>

        <li>
                   <label class="popup">
          <input type="checkbox">
          <div class="burger" tabindex="0">
            <span></span>
            <span></span>
            <span></span>
          </div>
          <nav class="popup-window">
            <legend>Actions</legend>
            <ul>
              <li>
                <button>
                  <svg stroke-linejoin="round" stroke-linecap="round" stroke-width="2" stroke="currentColor" fill="none" viewBox="0 0 24 24" height="14" width="14" xmlns="http://www.w3.org/2000/svg">
                    <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                    <circle r="4" cy="7" cx="9"></circle>
                    <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                    <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                  </svg>
                  <span>Colloborators</span>
                </button>
              </li>
              <li>
                <button>
                  <svg stroke-linejoin="round" stroke-linecap="round" stroke-width="2" stroke="currentColor" fill="none" viewBox="0 0 24 24" height="14" width="14" xmlns="http://www.w3.org/2000/svg">
                    <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
                    <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
                  </svg>
                  <span>Magic Link</span>
                </button>
              </li>
              <hr>
              <li>
                <button>
                  <svg stroke-linejoin="round" stroke-linecap="round" stroke-width="2" stroke="currentColor" fill="none" viewBox="0 0 24 24" height="14" width="14" xmlns="http://www.w3.org/2000/svg">
                    <rect ry="2" rx="2" height="13" width="13" y="9" x="9"></rect>
                    <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                  </svg>
                  <span>Clone</span>
                </button>
              </li>
              <li>
                <button>
                  <svg stroke-linejoin="round" stroke-linecap="round" stroke-width="2" stroke="currentColor" fill="none" viewBox="0 0 24 24" height="14" width="14" xmlns="http://www.w3.org/2000/svg">
                    <polygon points="16 3 21 8 8 21 3 21 3 16 16 3"></polygon>
                  </svg>
                  <span>Edit</span>
                </button>
              </li>
              <hr>
              @*<li>
                <button>
                  <svg stroke-linejoin="round" stroke-linecap="round" stroke-width="2" stroke="currentColor" fill="none" viewBox="0 0 24 24" height="14" width="14" xmlns="http://www.w3.org/2000/svg">
                    <line y2="18" x2="6" y1="6" x1="18"></line>
                    <line y2="18" x2="18" y1="6" x1="6"></line>
                  </svg>
                  <span>Delete</span>
                </button>
              </li>*@
            </ul>
          </nav>
        </label>
        </li>

        <li style="padding: 0px 0px 0px 15px;">
            <img src="@Url.Action("Index", "Manage")" alt="Profile Picture" class="dp" onerror="this.src='@Url.Content("~/Content/Images/placeholder.png")'" />

            @*@Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage", @class = "nav-link" })*@
        </li>


    </ul>
    }
}
else
{
    <ul class="navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", @class="nav-link" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", @class="nav-link" })</li>
    </ul>
}
